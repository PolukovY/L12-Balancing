events {}

http {

    log_format  main  '$realip_remote_addr :: $proxy_add_x_forwarded_for - $remote_addr - $remote_user [$time_local] "$host$request_uri" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" resp_body:"$resp_body"';

    geo $arg_remote_addr $geo {
        default default;
        include geo.conf;
    }

    map $geo $nearest_server {
        GB      GB;
        US      US;
        default default;
    }

    upstream default.backend {
        server 127.0.0.1:81 max_fails=5 fail_timeout=5s;
        server 127.0.0.1:82 backup;
    }

    upstream GB.backend {
	    server 127.0.0.1:83 max_fails=5 fail_timeout=5s;
        server 127.0.0.1:84 backup;
    }

    upstream US.backend {	
	    server 127.0.0.1:85 max_fails=5 fail_timeout=5s;
	    server 127.0.0.1:86 max_fails=5 fail_timeout=5s;
	    server 127.0.0.1:87 backup;
    }

    server {
        
        listen 80;
        server_name localhost;

        error_log /etc/nginx/error.log;
        access_log /etc/nginx/access.log main;

        lua_need_request_body on;

        set $resp_body "";
        body_filter_by_lua '
            local resp_body = string.sub(ngx.arg[1], 1, 1000)
            ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
            if ngx.arg[2] then
                ngx.var.resp_body = ngx.ctx.buffered
            end
        ';

        location / {
             real_ip_header X-Forwarded-For;
             add_header X-Country $geo;             
             proxy_pass http://$geo.backend;           
        }        
    }

    # default + backup
    server {
		listen 81;
		location / {
			return 200 "Hello from server that listen 81";
		}
	}

    server {
		listen 82;
		location / {
			return 200 "Hello from backup for server that listen 82";
		}
	}

    server {
		listen 83;
		location / {
			return 200 "Hello from UK server that listen 83";
		}
	}

    server {
		listen 84;
		location / {
			return 200 "Hello from backup UK server that listen 84";
		}
	}

    server {        
		listen 85;
		location / {
			return 200 "Hello from US1 server that listen 85";
		}
	}
     
    server {
		listen 86;
		location / {
			return 200 "Hello from US2 server that listen 86";
		}
	}

    server {
		listen 87;
		location / {
			return 200 "Hello from backup for US servers that listen 87";
		}
	}
}